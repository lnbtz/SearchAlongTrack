name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run check

      - name: Run unit tests
        run: npm run test:unit -- --run

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: build/
          retention-days: 7

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Quality Gate Summary
        run: |
          echo "🎉 All quality checks passed!"
          echo "✅ Linting passed"
          echo "✅ Type checking passed" 
          echo "✅ Unit tests passed"
          echo "✅ E2E tests passed"
          echo "✅ Build successful"
          echo ""
          echo "🚀 Vercel will automatically deploy this PR as a preview."
          echo "📦 Production deployment will happen automatically when merged to main."

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Quality Gate')
            );

            const commentBody = `## 🎯 Quality Gate Report

            ✅ **All checks passed!** This PR is ready for review.

            ### Test Results:
            - 🧪 Unit tests: ✅ Passed
            - 🎭 E2E tests: ✅ Passed  
            - 📝 Linting: ✅ Passed
            - 🔍 Type checking: ✅ Passed
            - 🔨 Build: ✅ Successful

            ### Deployment:
            🚀 Vercel will automatically create a preview deployment for this PR.

            _This comment is automatically updated when new commits are pushed._`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
